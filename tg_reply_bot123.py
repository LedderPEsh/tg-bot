import json
import os
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    ContextTypes, ChatMemberHandler, filters
)

BOT_TOKEN = '8068486569:AAEwxyF1k8S7qw8wUkLCi4LA7VLa_rCNnmk'
DATA_FILE = "data.json"

OWNERS = {7974136455}
ADMINS = set(OWNERS)
chats = set()
user_state = {}
pending_broadcast = {}

# === –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
def load_data():
    global chats, ADMINS
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
            chats.update(data.get("chats", []))
            ADMINS.update(data.get("admins", []))
load_data()

# === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö ===
def save_data():
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump({
            "chats": list(chats),
            "admins": list(ADMINS)
        }, f)

# === –ú–µ–Ω—é ===
def main_menu():
    return ReplyKeyboardMarkup([
        [KeyboardButton("üì£ –ß–∞—Ç—ã"), KeyboardButton("üì¢ –†–∞—Å—Å—ã–ª–∫–∞")],
        [KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")]
    ], resize_keyboard=True)

def chats_menu():
    return ReplyKeyboardMarkup([
        [KeyboardButton("üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á–∞—Ç—ã")],
        [KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç"), KeyboardButton("‚ûñ –£–¥–∞–ª–∏—Ç—å —á–∞—Ç")],
        [KeyboardButton("üîô –ù–∞–∑–∞–¥")]
    ], resize_keyboard=True)

def broadcast_confirm_menu():
    return ReplyKeyboardMarkup([
        [KeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"), KeyboardButton("üîÅ –ó–∞–Ω–æ–≤–æ")]
    ], resize_keyboard=True)

def broadcast_menu():
    return ReplyKeyboardMarkup([
        [KeyboardButton("‚úâÔ∏è –ù–∞—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É")],
        [KeyboardButton("üîô –ù–∞–∑–∞–¥")]
    ], resize_keyboard=True)

def settings_menu():
    return ReplyKeyboardMarkup([
        [KeyboardButton("üëë –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞"), KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞")],
        [KeyboardButton("üìú –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–¥–º–∏–Ω–æ–≤")],
        [KeyboardButton("üîô –ù–∞–∑–∞–¥")]
    ], resize_keyboard=True)

# === –ö–æ–º–∞–Ω–¥—ã ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in ADMINS:
        return
    await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())

async def handle_chat_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat = update.effective_chat
    my_member = update.my_chat_member
    if my_member and my_member.new_chat_member.status in ["member", "administrator"]:
        chats.add(chat.id)
        save_data()
        try:
            await context.bot.send_message(chat.id, f"ü§ñ –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç {chat.title or chat.id}")
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç {chat.id}: {e}")

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text.strip()
    if user_id not in ADMINS:
        return

    state = user_state.get(user_id)

    if text == "üì£ –ß–∞—Ç—ã":
        await update.message.reply_text("–ú–µ–Ω—é —á–∞—Ç–æ–≤:", reply_markup=chats_menu())

    elif text == "üì¢ –†–∞—Å—Å—ã–ª–∫–∞":
        await update.message.reply_text("–ú–µ–Ω—é —Ä–∞—Å—Å—ã–ª–∫–∏:", reply_markup=broadcast_menu())

    elif text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        await update.message.reply_text("–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫:", reply_markup=settings_menu())

    elif text == "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á–∞—Ç—ã":
        msg = "üìã –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤:\n"
        if chats:
            for cid in chats:
                try:
                    chat = await context.bot.get_chat(cid)
                    title = chat.title or chat.username or "‚Äî"
                    msg += f"‚Ä¢ {cid} | {title}\n"
                except Exception as e:
                    msg += f"‚Ä¢ {cid} | (–æ—à–∏–±–∫–∞: {e})\n"
        else:
            msg = "üì≠ –ß–∞—Ç–æ–≤ –Ω–µ—Ç."
        await update.message.reply_text(msg, reply_markup=chats_menu())

    elif text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç":
        user_state[user_id] = "adding_chat"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ ID —á–∞—Ç–∞:")

    elif text == "‚ûñ –£–¥–∞–ª–∏—Ç—å —á–∞—Ç":
        user_state[user_id] = "removing_chat"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ ID —á–∞—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")

    elif text == "‚úâÔ∏è –ù–∞—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É":
        user_state[user_id] = "writing_broadcast"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:")

    elif text == "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":
        text_to_send = pending_broadcast.get(user_id)
        success = 0
        for cid in chats:
            try:
                await context.bot.send_message(chat_id=cid, text=text_to_send)
                success += 1
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç {cid}: {e}")
        await update.message.reply_text(f"üì¨ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {success}", reply_markup=main_menu())
        user_state[user_id] = None
        pending_broadcast.pop(user_id, None)

    elif text == "üîÅ –ó–∞–Ω–æ–≤–æ":
        user_state[user_id] = "writing_broadcast"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:")

    elif text == "üëë –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞":
        user_state[user_id] = "adding_admin"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ ID –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞:")

    elif text == "‚ùå –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞":
        user_state[user_id] = "removing_admin"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ ID –∞–¥–º–∏–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")

    elif text == "üìú –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–¥–º–∏–Ω–æ–≤":
        msg = "üìÉ –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤:\n"
        for admin_id in ADMINS:
            try:
                user = await context.bot.get_chat(admin_id)
                username = f"@{user.username}" if user.username else "‚Äî"
                name = user.first_name or "‚Äî"
                msg += f"‚Ä¢ {admin_id} | {username} | {name}\n"
            except Exception as e:
                msg += f"‚Ä¢ {admin_id} | (–æ—à–∏–±–∫–∞: {e})\n"
        await update.message.reply_text(msg, reply_markup=settings_menu())

    elif text == "üîô –ù–∞–∑–∞–¥":
        await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())
        user_state[user_id] = None

    elif state == "adding_chat":
        try:
            chat_id = int(text)
            chats.add(chat_id)
            save_data()
            await update.message.reply_text(f"‚úÖ –ß–∞—Ç {chat_id} –¥–æ–±–∞–≤–ª–µ–Ω.", reply_markup=chats_menu())
        except:
            await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID.", reply_markup=chats_menu())
        user_state[user_id] = None

    elif state == "removing_chat":
        try:
            chat_id = int(text)
            chats.discard(chat_id)
            save_data()
            await update.message.reply_text(f"üóëÔ∏è –ß–∞—Ç {chat_id} —É–¥–∞–ª—ë–Ω.", reply_markup=chats_menu())
        except:
            await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID.", reply_markup=chats_menu())
        user_state[user_id] = None

    elif state == "writing_broadcast":
        pending_broadcast[user_id] = text
        await update.message.reply_text("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É:", reply_markup=broadcast_confirm_menu())

    elif state == "adding_admin":
        try:
            admin_id = int(text)
            ADMINS.add(admin_id)
            save_data()
            await update.message.reply_text(f"‚úÖ –ê–¥–º–∏–Ω {admin_id} –¥–æ–±–∞–≤–ª–µ–Ω.", reply_markup=settings_menu())
        except:
            await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID.", reply_markup=settings_menu())
        user_state[user_id] = None

    elif state == "removing_admin":
        try:
            admin_id = int(text)
            if admin_id in OWNERS:
                await update.message.reply_text("‚ùå –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞.", reply_markup=settings_menu())
            else:
                ADMINS.discard(admin_id)
                save_data()
                await update.message.reply_text(f"üóëÔ∏è –ê–¥–º–∏–Ω {admin_id} —É–¥–∞–ª—ë–Ω.", reply_markup=settings_menu())
        except:
            await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID.", reply_markup=settings_menu())
        user_state[user_id] = None

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(ChatMemberHandler(handle_chat_member, ChatMemberHandler.MY_CHAT_MEMBER))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
